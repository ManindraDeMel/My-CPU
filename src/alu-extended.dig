<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
    <entry>
      <string>Width</string>
      <int>9</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RESULT</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B RESULT

# Test small results
loop(a, 1 &lt;&lt; 4)
  loop(b, 1 &lt;&lt; 4)
    (0b000) (a) (b) ((a + b) &amp; 0xFFFF)
    (0b001) (a) (b) ((a - b) &amp; 0xFFFF)
    (0b010) (a) (b) (a &amp; b)
    (0b011) (a) (b) (a | b)
    (0b100) (a) (b) (a ^ b)
    (0b101) (a) (b) (~(a &amp; b))
    (0b110) (a) (b) (~(a | b))
    (0b111) (a) (b) (~(a ^ b))
  end loop
end loop


# Test large results
loop(i, 1000)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    (0b000) (a) (b) ((a + b) &amp; 0xFFFF)
    (0b001) (a) (b) ((a - b) &amp; 0xFFFF)
    (0b010) (a) (b) (a &amp; b)
    (0b011) (a) (b) (a | b)
    (0b100) (a) (b) (a ^ b)
    (0b101) (a) (b) (~(a &amp; b))
    (0b110) (a) (b) (~(a | b))
    (0b111) (a) (b) (~(a ^ b))
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-160" y="-140"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Z</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B Z

declare Z = FLAG &amp; 0b1;

# Test all zero cases
0b000 0 0 1
0b001 0 0 1
0b010 0 0 1
0b011 0 0 1
0b100 0 0 1
0b101 0 0 0
0b110 0 0 0
0b111 0 0 0

# Test 1 + (-1) = 0
0b000 1 0xFFFF 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    0b000 (a) 0 (a = 0)
    0b001 (a) 0 (a = 0)
    0b010 (a) 0 1
    0b011 (a) 0 (a = 0)
    0b100 (a) 0 (a = 0)
    0b101 (a) 0 0
    0b110 (a) 0 0
    0b111 (a) 0 (a = 0)
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    0b000 (a) (b) (((a + b) &amp; 0xFFFF) = 0)
    0b001 (a) (b) (((a - b) &amp; 0xFFFF) = 0)
    0b010 (a) (b) ((a &amp; b) = 0)
    0b011 (a) (b) ((a | b) = 0)
    0b100 (a) (b) ((a ^ b) = 0)
    0b101 (a) (b) (((~(a &amp; b)) &amp; 0xFFFF) = 0)
    0b110 (a) (b) (((~(a | b)) &amp; 0xFFFF) = 0)
    0b111 (a) (b) (((~(a ^ b)) &amp; 0xFFFF) = 0)
end loop</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-160" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>N</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B N

declare N = (FLAG &gt;&gt; 1) &amp; 0b1;

# Test all zero cases
0b000 0 0 0
0b001 0 0 0
0b010 0 0 0
0b011 0 0 0
0b100 0 0 0
0b101 0 0 1
0b110 0 0 1
0b111 0 0 1

# Test 1 + (-1) = 0
0b000 1 0xFFFF 0

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    0b000 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
    0b001 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
    0b010 (a) 0 0
    0b011 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
    0b100 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
    0b101 (a) 0 1
    0b110 (a) 0 ((~(a &gt;&gt; 15)) &amp; 0b1)
    0b111 (a) 0 ((~(a &gt;&gt; 15)) &amp; 0b1)
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    0b000 (a) (b) (((a + b) &gt;&gt; 15) &amp; 0b1)
    0b001 (a) (b) (((a - b) &gt;&gt; 15) &amp; 0b1)
    0b010 (a) (b) (((a &amp; b) &gt;&gt; 15) &amp; 0b1)
    0b011 (a) (b) (((a | b) &gt;&gt; 15) &amp; 0b1)
    0b100 (a) (b) (((a ^ b) &gt;&gt; 15) &amp; 0b1)
    0b101 (a) (b) (((~(a &amp; b)) &gt;&gt; 15) &amp; 0b1)
    0b110 (a) (b) (((~(a | b)) &gt;&gt; 15) &amp; 0b1)
    0b111 (a) (b) (((~(a ^ b)) &gt;&gt; 15) &amp; 0b1)
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-160" y="60"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>C</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B C

declare C = (FLAG &gt;&gt; 2) &amp; 0b1;

# Test 0 + 0
0b000 0 0 0

# (0 - 0) is implemented as 0 + (0xFFFF + 1), so a carry is expected
0b001 0 0 1

# Carry should propagate all the way from the first bit if necessary
0b000 1 0xFFFF 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    0b000 (a) 0 0
    0b001 (a) 0 1  # (a - 0) is implemented as (a + 0xFFFF + 1) in the adder, so a carry is always expected
    0b010 (a) 0 0  # carry is defined as 0 for AND
    0b011 (a) 0 0  # carry is defined as 0 for OR
    0b100 (a) 0 0  # carry is defined as 0 for XOR
    0b101 (a) 0 0  # carry is defined as 0 for NAND
    0b110 (a) 0 0  # carry is defined as 0 for NOR
    0b111 (a) 0 0  # carry is defined as 0 for XNOR
end loop

# Adding 15 bit values should never carry
loop(i, 100)
    0b000 (random(1 &lt;&lt; 15)) (random(1 &lt;&lt; 15)) 0
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    0b000 (a) (b) (((a + b) &gt;&gt; 16) &amp; 0b1)
    0b001 (a) (b) (~((a - b) &gt;&gt; 16) &amp; 0b1)
end loop

# AND, OR, XOR, and their N versions never set carry
loop(i, 100)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);
    0b010 (a) (b) 0
    0b011 (a) (b) 0
    0b100 (a) (b) 0
    0b101 (a) (b) 0
    0b110 (a) (b) 0
    0b111 (a) (b) 0
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-160" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>V</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B V

declare V = (FLAG &gt;&gt; 3) &amp; 0b1;

# Test zero cases for + / -
0b000 0 0 0
0b001 0 0 0

# 1 + (-1) = 0  ; different input signs = no overflow here!
0b000 1 0xFFFF 0

# 3 - 5 = 3 + (-5) = -2  ; subtraction inverts the second operand sign
0b001 3 5 0

# Some edge cases when subtracting 0x8000
0b001 0x8000 0x8000 0
0b001 0xFFFF 0x8000 0
0b001 0x7FFF 0x8000 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    0b000 (a) 0 0
    0b001 (a) 0 0
    0b010 (a) 0 0  # overflow is defined as 0 for AND
    0b011 (a) 0 0  # overflow is defined as 0 for OR
    0b100 (a) 0 0  # overflow is defined as 0 for XOR
    0b101 (a) 0 0  # overflow is defined as 0 for NAND
    0b110 (a) 0 0  # overflow is defined as 0 for NOR
    0b111 (a) 0 0  # overflow is defined as 0 for XNOR
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    0b000 (a) (b) (((~(a ^ b) &amp; (a ^ (a + b))) &gt;&gt; 15) &amp; 0b1)
    0b001 (a) (b) (((~(a ^ ~b) &amp; (a ^ (a - b))) &gt;&gt; 15) &amp; 0b1)
end loop

# AND, OR, XOR, and their N versions never set overflow
loop(i, 100)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);
    0b010 (a) (b) 0
    0b011 (a) (b) 0
    0b100 (a) (b) 0
    0b101 (a) (b) 0
    0b110 (a) (b) 0
    0b111 (a) (b) 0
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-160" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>First input to ALU</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>A</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="460" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Second input to ALU</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>B</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="420" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Operation selection input</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="80" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The result of this ALU operation</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>RESULT</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="1540" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="1520" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The flags associated with the result of this ALU operation

0. Z (zero)
1. N (negative)
2. C (carry)
3. V (overflow)</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>FLAG</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="1540" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="1520" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Add</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="720" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="560" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="480" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="560" y="60"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="560" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>3</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="80" y="-80"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="1140" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="960" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1,1,1</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>4</string>
        </entry>
      </elementAttributes>
      <pos x="1420" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="1360" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes/>
      <pos x="1180" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="1160" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15-15</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="-200"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15-15</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="-160"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15-15</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes/>
      <pos x="1180" y="-140"/>
    </visualElement>
    <visualElement>
      <elementName>XNOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="860" y="-200"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="1160" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="860" y="-140"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1000" y="-160"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S0</string>
        </entry>
      </elementAttributes>
      <pos x="80" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>NetName</string>
          <string>S0</string>
        </entry>
      </elementAttributes>
      <pos x="620" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S0</string>
        </entry>
      </elementAttributes>
      <pos x="680" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S1</string>
        </entry>
      </elementAttributes>
      <pos x="980" y="-60"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S1</string>
        </entry>
      </elementAttributes>
      <pos x="60" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="560" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>NAnd</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="560" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>NOr</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="560" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>XNOr</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="560" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S2</string>
        </entry>
      </elementAttributes>
      <pos x="40" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>3</int>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="860" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S2</string>
        </entry>
      </elementAttributes>
      <pos x="980" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1000" y="-60"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectBottom</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>RectHeight</string>
          <int>25</int>
        </entry>
        <entry>
          <string>RectInside</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>Non-Arithmetic logic</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>30</int>
        </entry>
      </elementAttributes>
      <pos x="240" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectHeight</string>
          <int>10</int>
        </entry>
        <entry>
          <string>RectInside</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>Overflow flag logic</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>41</int>
        </entry>
      </elementAttributes>
      <pos x="620" y="-280"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectHeight</string>
          <int>6</int>
        </entry>
        <entry>
          <string>RectInside</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>Arithmetic logic</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>33</int>
        </entry>
      </elementAttributes>
      <pos x="240" y="-80"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectHeight</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Label</string>
          <string>Zero &amp; Negative flag logic</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>20</int>
        </entry>
      </elementAttributes>
      <pos x="900" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>V</string>
        </entry>
      </elementAttributes>
      <pos x="1280" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>C</string>
        </entry>
      </elementAttributes>
      <pos x="1200" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>N</string>
        </entry>
      </elementAttributes>
      <pos x="1180" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Z</string>
        </entry>
      </elementAttributes>
      <pos x="1160" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectBottom</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>RectHeight</string>
          <int>4</int>
        </entry>
        <entry>
          <string>RectInside</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>Carry flag logic</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>25</int>
        </entry>
      </elementAttributes>
      <pos x="920" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>NetName</string>
          <string>S</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S</string>
        </entry>
      </elementAttributes>
      <pos x="880" y="820"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="660" y="320"/>
      <p2 x="720" y="320"/>
    </wire>
    <wire>
      <p1 x="980" y="320"/>
      <p2 x="1120" y="320"/>
    </wire>
    <wire>
      <p1 x="1440" y="320"/>
      <p2 x="1540" y="320"/>
    </wire>
    <wire>
      <p1 x="1400" y="320"/>
      <p2 x="1420" y="320"/>
    </wire>
    <wire>
      <p1 x="1220" y="320"/>
      <p2 x="1360" y="320"/>
    </wire>
    <wire>
      <p1 x="600" y="0"/>
      <p2 x="620" y="0"/>
    </wire>
    <wire>
      <p1 x="780" y="0"/>
      <p2 x="1180" y="0"/>
    </wire>
    <wire>
      <p1 x="620" y="0"/>
      <p2 x="720" y="0"/>
    </wire>
    <wire>
      <p1 x="800" y="640"/>
      <p2 x="860" y="640"/>
    </wire>
    <wire>
      <p1 x="980" y="260"/>
      <p2 x="1140" y="260"/>
    </wire>
    <wire>
      <p1 x="420" y="260"/>
      <p2 x="560" y="260"/>
    </wire>
    <wire>
      <p1 x="840" y="-200"/>
      <p2 x="860" y="-200"/>
    </wire>
    <wire>
      <p1 x="620" y="-200"/>
      <p2 x="820" y="-200"/>
    </wire>
    <wire>
      <p1 x="980" y="200"/>
      <p2 x="1140" y="200"/>
    </wire>
    <wire>
      <p1 x="1080" y="-140"/>
      <p2 x="1180" y="-140"/>
    </wire>
    <wire>
      <p1 x="840" y="-140"/>
      <p2 x="860" y="-140"/>
    </wire>
    <wire>
      <p1 x="1000" y="460"/>
      <p2 x="1140" y="460"/>
    </wire>
    <wire>
      <p1 x="460" y="460"/>
      <p2 x="560" y="460"/>
    </wire>
    <wire>
      <p1 x="460" y="140"/>
      <p2 x="560" y="140"/>
    </wire>
    <wire>
      <p1 x="1120" y="-80"/>
      <p2 x="1200" y="-80"/>
    </wire>
    <wire>
      <p1 x="640" y="80"/>
      <p2 x="780" y="80"/>
    </wire>
    <wire>
      <p1 x="720" y="720"/>
      <p2 x="860" y="720"/>
    </wire>
    <wire>
      <p1 x="980" y="400"/>
      <p2 x="1040" y="400"/>
    </wire>
    <wire>
      <p1 x="1060" y="400"/>
      <p2 x="1140" y="400"/>
    </wire>
    <wire>
      <p1 x="660" y="400"/>
      <p2 x="700" y="400"/>
    </wire>
    <wire>
      <p1 x="680" y="-20"/>
      <p2 x="720" y="-20"/>
    </wire>
    <wire>
      <p1 x="780" y="-20"/>
      <p2 x="800" y="-20"/>
    </wire>
    <wire>
      <p1 x="420" y="-20"/>
      <p2 x="560" y="-20"/>
    </wire>
    <wire>
      <p1 x="980" y="-20"/>
      <p2 x="1000" y="-20"/>
    </wire>
    <wire>
      <p1 x="980" y="340"/>
      <p2 x="1100" y="340"/>
    </wire>
    <wire>
      <p1 x="1120" y="340"/>
      <p2 x="1140" y="340"/>
    </wire>
    <wire>
      <p1 x="1220" y="340"/>
      <p2 x="1420" y="340"/>
    </wire>
    <wire>
      <p1 x="420" y="340"/>
      <p2 x="560" y="340"/>
    </wire>
    <wire>
      <p1 x="420" y="20"/>
      <p2 x="480" y="20"/>
    </wire>
    <wire>
      <p1 x="520" y="20"/>
      <p2 x="560" y="20"/>
    </wire>
    <wire>
      <p1 x="580" y="20"/>
      <p2 x="620" y="20"/>
    </wire>
    <wire>
      <p1 x="680" y="20"/>
      <p2 x="720" y="20"/>
    </wire>
    <wire>
      <p1 x="1220" y="20"/>
      <p2 x="1240" y="20"/>
    </wire>
    <wire>
      <p1 x="780" y="660"/>
      <p2 x="860" y="660"/>
    </wire>
    <wire>
      <p1 x="980" y="280"/>
      <p2 x="1140" y="280"/>
    </wire>
    <wire>
      <p1 x="980" y="220"/>
      <p2 x="1140" y="220"/>
    </wire>
    <wire>
      <p1 x="460" y="220"/>
      <p2 x="560" y="220"/>
    </wire>
    <wire>
      <p1 x="980" y="-160"/>
      <p2 x="1000" y="-160"/>
    </wire>
    <wire>
      <p1 x="840" y="-160"/>
      <p2 x="860" y="-160"/>
    </wire>
    <wire>
      <p1 x="680" y="-160"/>
      <p2 x="820" y="-160"/>
    </wire>
    <wire>
      <p1 x="980" y="480"/>
      <p2 x="1120" y="480"/>
    </wire>
    <wire>
      <p1 x="660" y="480"/>
      <p2 x="680" y="480"/>
    </wire>
    <wire>
      <p1 x="1120" y="480"/>
      <p2 x="1140" y="480"/>
    </wire>
    <wire>
      <p1 x="980" y="160"/>
      <p2 x="1140" y="160"/>
    </wire>
    <wire>
      <p1 x="640" y="160"/>
      <p2 x="760" y="160"/>
    </wire>
    <wire>
      <p1 x="940" y="160"/>
      <p2 x="960" y="160"/>
    </wire>
    <wire>
      <p1 x="840" y="-100"/>
      <p2 x="860" y="-100"/>
    </wire>
    <wire>
      <p1 x="1160" y="-100"/>
      <p2 x="1180" y="-100"/>
    </wire>
    <wire>
      <p1 x="460" y="-100"/>
      <p2 x="680" y="-100"/>
    </wire>
    <wire>
      <p1 x="80" y="-100"/>
      <p2 x="120" y="-100"/>
    </wire>
    <wire>
      <p1 x="800" y="-100"/>
      <p2 x="820" y="-100"/>
    </wire>
    <wire>
      <p1 x="420" y="100"/>
      <p2 x="560" y="100"/>
    </wire>
    <wire>
      <p1 x="700" y="740"/>
      <p2 x="860" y="740"/>
    </wire>
    <wire>
      <p1 x="980" y="420"/>
      <p2 x="1020" y="420"/>
    </wire>
    <wire>
      <p1 x="1040" y="420"/>
      <p2 x="1140" y="420"/>
    </wire>
    <wire>
      <p1 x="420" y="420"/>
      <p2 x="560" y="420"/>
    </wire>
    <wire>
      <p1 x="1080" y="-40"/>
      <p2 x="1120" y="-40"/>
    </wire>
    <wire>
      <p1 x="980" y="360"/>
      <p2 x="1080" y="360"/>
    </wire>
    <wire>
      <p1 x="1100" y="360"/>
      <p2 x="1140" y="360"/>
    </wire>
    <wire>
      <p1 x="1240" y="360"/>
      <p2 x="1420" y="360"/>
    </wire>
    <wire>
      <p1 x="1160" y="40"/>
      <p2 x="1180" y="40"/>
    </wire>
    <wire>
      <p1 x="760" y="680"/>
      <p2 x="860" y="680"/>
    </wire>
    <wire>
      <p1 x="800" y="620"/>
      <p2 x="860" y="620"/>
    </wire>
    <wire>
      <p1 x="980" y="300"/>
      <p2 x="1140" y="300"/>
    </wire>
    <wire>
      <p1 x="460" y="300"/>
      <p2 x="560" y="300"/>
    </wire>
    <wire>
      <p1 x="980" y="240"/>
      <p2 x="1140" y="240"/>
    </wire>
    <wire>
      <p1 x="640" y="240"/>
      <p2 x="740" y="240"/>
    </wire>
    <wire>
      <p1 x="960" y="-180"/>
      <p2 x="980" y="-180"/>
    </wire>
    <wire>
      <p1 x="420" y="180"/>
      <p2 x="560" y="180"/>
    </wire>
    <wire>
      <p1 x="980" y="180"/>
      <p2 x="1140" y="180"/>
    </wire>
    <wire>
      <p1 x="1120" y="500"/>
      <p2 x="1220" y="500"/>
    </wire>
    <wire>
      <p1 x="420" y="500"/>
      <p2 x="560" y="500"/>
    </wire>
    <wire>
      <p1 x="940" y="-120"/>
      <p2 x="1000" y="-120"/>
    </wire>
    <wire>
      <p1 x="1220" y="-120"/>
      <p2 x="1260" y="-120"/>
    </wire>
    <wire>
      <p1 x="680" y="760"/>
      <p2 x="860" y="760"/>
    </wire>
    <wire>
      <p1 x="980" y="440"/>
      <p2 x="1000" y="440"/>
    </wire>
    <wire>
      <p1 x="1020" y="440"/>
      <p2 x="1140" y="440"/>
    </wire>
    <wire>
      <p1 x="980" y="-60"/>
      <p2 x="1000" y="-60"/>
    </wire>
    <wire>
      <p1 x="740" y="700"/>
      <p2 x="860" y="700"/>
    </wire>
    <wire>
      <p1 x="900" y="700"/>
      <p2 x="940" y="700"/>
    </wire>
    <wire>
      <p1 x="940" y="700"/>
      <p2 x="1540" y="700"/>
    </wire>
    <wire>
      <p1 x="460" y="60"/>
      <p2 x="560" y="60"/>
    </wire>
    <wire>
      <p1 x="1120" y="60"/>
      <p2 x="1200" y="60"/>
    </wire>
    <wire>
      <p1 x="980" y="380"/>
      <p2 x="1060" y="380"/>
    </wire>
    <wire>
      <p1 x="1080" y="380"/>
      <p2 x="1140" y="380"/>
    </wire>
    <wire>
      <p1 x="1260" y="380"/>
      <p2 x="1420" y="380"/>
    </wire>
    <wire>
      <p1 x="460" y="380"/>
      <p2 x="560" y="380"/>
    </wire>
    <wire>
      <p1 x="1220" y="340"/>
      <p2 x="1220" y="500"/>
    </wire>
    <wire>
      <p1 x="840" y="-160"/>
      <p2 x="840" y="-140"/>
    </wire>
    <wire>
      <p1 x="1100" y="340"/>
      <p2 x="1100" y="360"/>
    </wire>
    <wire>
      <p1 x="460" y="-120"/>
      <p2 x="460" y="-100"/>
    </wire>
    <wire>
      <p1 x="460" y="380"/>
      <p2 x="460" y="460"/>
    </wire>
    <wire>
      <p1 x="460" y="140"/>
      <p2 x="460" y="220"/>
    </wire>
    <wire>
      <p1 x="460" y="-100"/>
      <p2 x="460" y="60"/>
    </wire>
    <wire>
      <p1 x="460" y="220"/>
      <p2 x="460" y="300"/>
    </wire>
    <wire>
      <p1 x="460" y="300"/>
      <p2 x="460" y="380"/>
    </wire>
    <wire>
      <p1 x="460" y="60"/>
      <p2 x="460" y="140"/>
    </wire>
    <wire>
      <p1 x="780" y="80"/>
      <p2 x="780" y="660"/>
    </wire>
    <wire>
      <p1 x="80" y="-120"/>
      <p2 x="80" y="-100"/>
    </wire>
    <wire>
      <p1 x="80" y="-60"/>
      <p2 x="80" y="-40"/>
    </wire>
    <wire>
      <p1 x="80" y="-100"/>
      <p2 x="80" y="-80"/>
    </wire>
    <wire>
      <p1 x="1040" y="400"/>
      <p2 x="1040" y="420"/>
    </wire>
    <wire>
      <p1 x="720" y="320"/>
      <p2 x="720" y="720"/>
    </wire>
    <wire>
      <p1 x="980" y="460"/>
      <p2 x="980" y="480"/>
    </wire>
    <wire>
      <p1 x="980" y="-180"/>
      <p2 x="980" y="-160"/>
    </wire>
    <wire>
      <p1 x="1240" y="20"/>
      <p2 x="1240" y="360"/>
    </wire>
    <wire>
      <p1 x="800" y="-100"/>
      <p2 x="800" y="-20"/>
    </wire>
    <wire>
      <p1 x="800" y="620"/>
      <p2 x="800" y="640"/>
    </wire>
    <wire>
      <p1 x="800" y="-20"/>
      <p2 x="800" y="620"/>
    </wire>
    <wire>
      <p1 x="1120" y="320"/>
      <p2 x="1120" y="340"/>
    </wire>
    <wire>
      <p1 x="1120" y="480"/>
      <p2 x="1120" y="500"/>
    </wire>
    <wire>
      <p1 x="1120" y="-80"/>
      <p2 x="1120" y="-40"/>
    </wire>
    <wire>
      <p1 x="1120" y="-40"/>
      <p2 x="1120" y="60"/>
    </wire>
    <wire>
      <p1 x="420" y="-120"/>
      <p2 x="420" y="-20"/>
    </wire>
    <wire>
      <p1 x="420" y="340"/>
      <p2 x="420" y="420"/>
    </wire>
    <wire>
      <p1 x="420" y="100"/>
      <p2 x="420" y="180"/>
    </wire>
    <wire>
      <p1 x="420" y="420"/>
      <p2 x="420" y="500"/>
    </wire>
    <wire>
      <p1 x="420" y="180"/>
      <p2 x="420" y="260"/>
    </wire>
    <wire>
      <p1 x="420" y="-20"/>
      <p2 x="420" y="20"/>
    </wire>
    <wire>
      <p1 x="420" y="260"/>
      <p2 x="420" y="340"/>
    </wire>
    <wire>
      <p1 x="420" y="20"/>
      <p2 x="420" y="100"/>
    </wire>
    <wire>
      <p1 x="740" y="240"/>
      <p2 x="740" y="700"/>
    </wire>
    <wire>
      <p1 x="1060" y="380"/>
      <p2 x="1060" y="400"/>
    </wire>
    <wire>
      <p1 x="680" y="-160"/>
      <p2 x="680" y="-100"/>
    </wire>
    <wire>
      <p1 x="680" y="480"/>
      <p2 x="680" y="760"/>
    </wire>
    <wire>
      <p1 x="680" y="-100"/>
      <p2 x="680" y="-20"/>
    </wire>
    <wire>
      <p1 x="1000" y="440"/>
      <p2 x="1000" y="460"/>
    </wire>
    <wire>
      <p1 x="40" y="-60"/>
      <p2 x="40" y="-40"/>
    </wire>
    <wire>
      <p1 x="1260" y="-120"/>
      <p2 x="1260" y="380"/>
    </wire>
    <wire>
      <p1 x="620" y="-200"/>
      <p2 x="620" y="0"/>
    </wire>
    <wire>
      <p1 x="940" y="160"/>
      <p2 x="940" y="700"/>
    </wire>
    <wire>
      <p1 x="880" y="780"/>
      <p2 x="880" y="820"/>
    </wire>
    <wire>
      <p1 x="1200" y="40"/>
      <p2 x="1200" y="60"/>
    </wire>
    <wire>
      <p1 x="1200" y="-100"/>
      <p2 x="1200" y="-80"/>
    </wire>
    <wire>
      <p1 x="1080" y="360"/>
      <p2 x="1080" y="380"/>
    </wire>
    <wire>
      <p1 x="760" y="160"/>
      <p2 x="760" y="680"/>
    </wire>
    <wire>
      <p1 x="1020" y="420"/>
      <p2 x="1020" y="440"/>
    </wire>
    <wire>
      <p1 x="700" y="400"/>
      <p2 x="700" y="740"/>
    </wire>
    <wire>
      <p1 x="60" y="-60"/>
      <p2 x="60" y="-40"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>