<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
    <entry>
      <string>Width</string>
      <int>9</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RESULT</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B RESULT

# Test small results
loop(a, 1 &lt;&lt; 4)
loop(b, 1 &lt;&lt; 4)
    (00) (a) (b) ((a + b) &amp; 0xFFFF)
    (01) (a) (b) ((a - b) &amp; 0xFFFF)
    (10) (a) (b) (a &amp; b)
    (11) (a) (b) (a | b)
end loop
end loop


# Test large results
loop(i, 1000)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    (00) (a) (b) ((a + b) &amp; 0xFFFF)
    (01) (a) (b) ((a - b) &amp; 0xFFFF)
    (10) (a) (b) (a &amp; b)
    (11) (a) (b) (a | b)
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Z</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B Z

declare Z = FLAG &amp; 0b1;

# Test all zero cases
00 0 0 1
01 0 0 1
10 0 0 1
11 0 0 1

# Test 1 + (-1) = 0
00 1 0xFFFF 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    00 (a) 0 (a = 0)
    01 (a) 0 (a = 0)
    10 (a) 0 1
    11 (a) 0 (a = 0)
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    00 (a) (b) (((a + b) &amp; 0xFFFF) = 0)
    01 (a) (b) (((a - b) &amp; 0xFFFF) = 0)
    10 (a) (b) ((a &amp; b) = 0)
    11 (a) (b) ((a | b) = 0)
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>N</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B N

declare N = (FLAG &gt;&gt; 1) &amp; 0b1;

# Test all zero cases
00 0 0 0
01 0 0 0
10 0 0 0
11 0 0 0

00 1 0xFFFF 0

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    00 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
    01 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
    10 (a) 0 0
    11 (a) 0 ((a &gt;&gt; 15) &amp; 0b1)
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    00 (a) (b) (((a + b) &gt;&gt; 15) &amp; 0b1)
    01 (a) (b) (((a - b) &gt;&gt; 15) &amp; 0b1)
    10 (a) (b) (((a &amp; b) &gt;&gt; 15) &amp; 0b1)
    11 (a) (b) (((a | b) &gt;&gt; 15) &amp; 0b1)
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>C</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B C

declare C = (FLAG &gt;&gt; 2) &amp; 0b1;

00 0 0 0

# (0 - 0) is implemented as 0 + (0xFFFF + 1), so a carry is expected
01 0 0 1

# Carry should propagate all the way from the first bit if necessary
00 1 0xFFFF 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    00 (a) 0 0
    01 (a) 0 1  # (a - 0) is implemented as (a + 0xFFFF + 1) in the adder, so a carry is always expected
    10 (a) 0 0  # carry is defined as 0 for AND
    11 (a) 0 0  # carry is defined as 0 for OR
end loop

# Adding 15 bit values should never carry
loop(i, 100)
    00 (random(1 &lt;&lt; 15)) (random(1 &lt;&lt; 15)) 0
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    00 (a) (b) (((a + b) &gt;&gt; 16) &amp; 0b1)
    01 (a) (b) (~((a - b) &gt;&gt; 16) &amp; 0b1)
end loop

# AND and OR never set carry
loop(i, 100)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);
    10 (a) (b) 0
    11 (a) (b) 0
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>V</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>ALUOP A B V

declare V = (FLAG &gt;&gt; 3) &amp; 0b1;

00 0 0 0
01 0 0 0

# 1 + (-1) = 0  ; different input signs = no overflow here!
00 1 0xFFFF 0

# 3 - 5 = 3 + (-5) = -2  ; subtraction inverts the second operand sign
01 3 5 0

# Some edge cases when subtracting 0x8000
01 0x8000 0x8000 0
01 0xFFFF 0x8000 0
01 0x7FFF 0x8000 1

# Test with a single bit set in A
loop(s, 16)
    let a = 1 &lt;&lt; s;

    00 (a) 0 0
    01 (a) 0 0
    10 (a) 0 0  # overflow is defined as 0 for AND
    11 (a) 0 0  # overflow is defined as 0 for OR
end loop

# Test random inputs
loop(i, 200)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);

    00 (a) (b) (((~(a ^ b) &amp; (a ^ (a + b))) &gt;&gt; 15) &amp; 0b1)
    01 (a) (b) (((~(a ^ -b) &amp; (a ^ (a - b))) &gt;&gt; 15) &amp; 0b1)
end loop

# AND and OR never set overflow
loop(i, 100)
    let a = random(1 &lt;&lt; 16);
    let b = random(1 &lt;&lt; 16);
    10 (a) (b) 0
    11 (a) (b) 0
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="0" y="400"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>First input to ALU</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>A</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="380" y="-60"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Second input to ALU</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>B</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="340" y="-60"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Operation selection input</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="240" y="-60"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The result of this ALU operation</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>RESULT</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="1260" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="1240" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The flags associated with the result of this ALU operation

0. Z (zero)
1. N (negative)
2. C (carry)
3. V (overflow)</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>FLAG</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>decSigned</intFormat>
        </entry>
      </elementAttributes>
      <pos x="1640" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="1600" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Add</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="640" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="480" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="420" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="480" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="480" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>2</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1</string>
        </entry>
      </elementAttributes>
      <pos x="240" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="620" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="780" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="1160" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="980" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1,1,1</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>4</string>
        </entry>
      </elementAttributes>
      <pos x="1540" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="1480" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes/>
      <pos x="1340" y="60"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="1320" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15-15</string>
        </entry>
      </elementAttributes>
      <pos x="680" y="-60"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15-15</string>
        </entry>
      </elementAttributes>
      <pos x="700" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>15-15</string>
        </entry>
      </elementAttributes>
      <pos x="820" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes/>
      <pos x="1360" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>XNOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="780" y="-60"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
      </elementAttributes>
      <pos x="1340" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>XOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="900" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="1060" y="-60"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S0</string>
        </entry>
      </elementAttributes>
      <pos x="640" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S1</string>
        </entry>
      </elementAttributes>
      <pos x="1360" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S1</string>
        </entry>
      </elementAttributes>
      <pos x="800" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S1</string>
        </entry>
      </elementAttributes>
      <pos x="1380" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S0</string>
        </entry>
      </elementAttributes>
      <pos x="500" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S0</string>
        </entry>
      </elementAttributes>
      <pos x="620" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S1</string>
        </entry>
      </elementAttributes>
      <pos x="220" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>S0</string>
        </entry>
      </elementAttributes>
      <pos x="240" y="20"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="760" y="0"/>
      <p2 x="880" y="0"/>
    </wire>
    <wire>
      <p1 x="1340" y="0"/>
      <p2 x="1360" y="0"/>
    </wire>
    <wire>
      <p1 x="560" y="320"/>
      <p2 x="580" y="320"/>
    </wire>
    <wire>
      <p1 x="1000" y="640"/>
      <p2 x="1020" y="640"/>
    </wire>
    <wire>
      <p1 x="1040" y="640"/>
      <p2 x="1160" y="640"/>
    </wire>
    <wire>
      <p1 x="820" y="260"/>
      <p2 x="860" y="260"/>
    </wire>
    <wire>
      <p1 x="580" y="260"/>
      <p2 x="620" y="260"/>
    </wire>
    <wire>
      <p1 x="860" y="260"/>
      <p2 x="1260" y="260"/>
    </wire>
    <wire>
      <p1 x="1000" y="580"/>
      <p2 x="1080" y="580"/>
    </wire>
    <wire>
      <p1 x="1100" y="580"/>
      <p2 x="1160" y="580"/>
    </wire>
    <wire>
      <p1 x="1420" y="580"/>
      <p2 x="1540" y="580"/>
    </wire>
    <wire>
      <p1 x="1560" y="520"/>
      <p2 x="1640" y="520"/>
    </wire>
    <wire>
      <p1 x="1000" y="520"/>
      <p2 x="1140" y="520"/>
    </wire>
    <wire>
      <p1 x="1520" y="520"/>
      <p2 x="1540" y="520"/>
    </wire>
    <wire>
      <p1 x="1240" y="520"/>
      <p2 x="1480" y="520"/>
    </wire>
    <wire>
      <p1 x="380" y="200"/>
      <p2 x="480" y="200"/>
    </wire>
    <wire>
      <p1 x="1000" y="460"/>
      <p2 x="1160" y="460"/>
    </wire>
    <wire>
      <p1 x="1000" y="400"/>
      <p2 x="1160" y="400"/>
    </wire>
    <wire>
      <p1 x="460" y="80"/>
      <p2 x="480" y="80"/>
    </wire>
    <wire>
      <p1 x="340" y="80"/>
      <p2 x="420" y="80"/>
    </wire>
    <wire>
      <p1 x="620" y="80"/>
      <p2 x="640" y="80"/>
    </wire>
    <wire>
      <p1 x="1380" y="80"/>
      <p2 x="1400" y="80"/>
    </wire>
    <wire>
      <p1 x="720" y="-20"/>
      <p2 x="760" y="-20"/>
    </wire>
    <wire>
      <p1 x="880" y="-20"/>
      <p2 x="900" y="-20"/>
    </wire>
    <wire>
      <p1 x="980" y="-20"/>
      <p2 x="1060" y="-20"/>
    </wire>
    <wire>
      <p1 x="380" y="-20"/>
      <p2 x="600" y="-20"/>
    </wire>
    <wire>
      <p1 x="1400" y="-20"/>
      <p2 x="1420" y="-20"/>
    </wire>
    <wire>
      <p1 x="600" y="-20"/>
      <p2 x="700" y="-20"/>
    </wire>
    <wire>
      <p1 x="760" y="-20"/>
      <p2 x="780" y="-20"/>
    </wire>
    <wire>
      <p1 x="1020" y="660"/>
      <p2 x="1160" y="660"/>
    </wire>
    <wire>
      <p1 x="840" y="20"/>
      <p2 x="900" y="20"/>
    </wire>
    <wire>
      <p1 x="800" y="20"/>
      <p2 x="820" y="20"/>
    </wire>
    <wire>
      <p1 x="340" y="340"/>
      <p2 x="480" y="340"/>
    </wire>
    <wire>
      <p1 x="1000" y="600"/>
      <p2 x="1060" y="600"/>
    </wire>
    <wire>
      <p1 x="1080" y="600"/>
      <p2 x="1160" y="600"/>
    </wire>
    <wire>
      <p1 x="660" y="280"/>
      <p2 x="780" y="280"/>
    </wire>
    <wire>
      <p1 x="1260" y="540"/>
      <p2 x="1540" y="540"/>
    </wire>
    <wire>
      <p1 x="1000" y="540"/>
      <p2 x="1120" y="540"/>
    </wire>
    <wire>
      <p1 x="1140" y="540"/>
      <p2 x="1160" y="540"/>
    </wire>
    <wire>
      <p1 x="560" y="220"/>
      <p2 x="580" y="220"/>
    </wire>
    <wire>
      <p1 x="1000" y="480"/>
      <p2 x="1160" y="480"/>
    </wire>
    <wire>
      <p1 x="1000" y="420"/>
      <p2 x="1160" y="420"/>
    </wire>
    <wire>
      <p1 x="1320" y="100"/>
      <p2 x="1340" y="100"/>
    </wire>
    <wire>
      <p1 x="880" y="-40"/>
      <p2 x="900" y="-40"/>
    </wire>
    <wire>
      <p1 x="1140" y="-40"/>
      <p2 x="1360" y="-40"/>
    </wire>
    <wire>
      <p1 x="1000" y="360"/>
      <p2 x="1160" y="360"/>
    </wire>
    <wire>
      <p1 x="860" y="360"/>
      <p2 x="980" y="360"/>
    </wire>
    <wire>
      <p1 x="1000" y="680"/>
      <p2 x="1140" y="680"/>
    </wire>
    <wire>
      <p1 x="1140" y="680"/>
      <p2 x="1160" y="680"/>
    </wire>
    <wire>
      <p1 x="340" y="40"/>
      <p2 x="480" y="40"/>
    </wire>
    <wire>
      <p1 x="600" y="40"/>
      <p2 x="640" y="40"/>
    </wire>
    <wire>
      <p1 x="700" y="40"/>
      <p2 x="720" y="40"/>
    </wire>
    <wire>
      <p1 x="720" y="40"/>
      <p2 x="800" y="40"/>
    </wire>
    <wire>
      <p1 x="1000" y="620"/>
      <p2 x="1040" y="620"/>
    </wire>
    <wire>
      <p1 x="1060" y="620"/>
      <p2 x="1160" y="620"/>
    </wire>
    <wire>
      <p1 x="380" y="300"/>
      <p2 x="480" y="300"/>
    </wire>
    <wire>
      <p1 x="580" y="300"/>
      <p2 x="620" y="300"/>
    </wire>
    <wire>
      <p1 x="1000" y="560"/>
      <p2 x="1100" y="560"/>
    </wire>
    <wire>
      <p1 x="1120" y="560"/>
      <p2 x="1160" y="560"/>
    </wire>
    <wire>
      <p1 x="1400" y="560"/>
      <p2 x="1540" y="560"/>
    </wire>
    <wire>
      <p1 x="340" y="240"/>
      <p2 x="480" y="240"/>
    </wire>
    <wire>
      <p1 x="720" y="240"/>
      <p2 x="780" y="240"/>
    </wire>
    <wire>
      <p1 x="1000" y="500"/>
      <p2 x="1160" y="500"/>
    </wire>
    <wire>
      <p1 x="1000" y="440"/>
      <p2 x="1160" y="440"/>
    </wire>
    <wire>
      <p1 x="700" y="-60"/>
      <p2 x="780" y="-60"/>
    </wire>
    <wire>
      <p1 x="900" y="-60"/>
      <p2 x="1060" y="-60"/>
    </wire>
    <wire>
      <p1 x="620" y="-60"/>
      <p2 x="680" y="-60"/>
    </wire>
    <wire>
      <p1 x="1000" y="380"/>
      <p2 x="1160" y="380"/>
    </wire>
    <wire>
      <p1 x="520" y="60"/>
      <p2 x="620" y="60"/>
    </wire>
    <wire>
      <p1 x="700" y="60"/>
      <p2 x="1340" y="60"/>
    </wire>
    <wire>
      <p1 x="620" y="60"/>
      <p2 x="640" y="60"/>
    </wire>
    <wire>
      <p1 x="1140" y="700"/>
      <p2 x="1260" y="700"/>
    </wire>
    <wire>
      <p1 x="640" y="300"/>
      <p2 x="640" y="320"/>
    </wire>
    <wire>
      <p1 x="900" y="-60"/>
      <p2 x="900" y="-40"/>
    </wire>
    <wire>
      <p1 x="580" y="300"/>
      <p2 x="580" y="320"/>
    </wire>
    <wire>
      <p1 x="580" y="220"/>
      <p2 x="580" y="260"/>
    </wire>
    <wire>
      <p1 x="1100" y="560"/>
      <p2 x="1100" y="580"/>
    </wire>
    <wire>
      <p1 x="1420" y="-20"/>
      <p2 x="1420" y="580"/>
    </wire>
    <wire>
      <p1 x="720" y="40"/>
      <p2 x="720" y="240"/>
    </wire>
    <wire>
      <p1 x="1040" y="620"/>
      <p2 x="1040" y="640"/>
    </wire>
    <wire>
      <p1 x="1360" y="100"/>
      <p2 x="1360" y="120"/>
    </wire>
    <wire>
      <p1 x="340" y="-60"/>
      <p2 x="340" y="40"/>
    </wire>
    <wire>
      <p1 x="340" y="240"/>
      <p2 x="340" y="340"/>
    </wire>
    <wire>
      <p1 x="340" y="40"/>
      <p2 x="340" y="80"/>
    </wire>
    <wire>
      <p1 x="340" y="80"/>
      <p2 x="340" y="240"/>
    </wire>
    <wire>
      <p1 x="980" y="-20"/>
      <p2 x="980" y="0"/>
    </wire>
    <wire>
      <p1 x="600" y="-20"/>
      <p2 x="600" y="40"/>
    </wire>
    <wire>
      <p1 x="220" y="0"/>
      <p2 x="220" y="20"/>
    </wire>
    <wire>
      <p1 x="860" y="260"/>
      <p2 x="860" y="360"/>
    </wire>
    <wire>
      <p1 x="1120" y="540"/>
      <p2 x="1120" y="560"/>
    </wire>
    <wire>
      <p1 x="800" y="280"/>
      <p2 x="800" y="300"/>
    </wire>
    <wire>
      <p1 x="800" y="20"/>
      <p2 x="800" y="40"/>
    </wire>
    <wire>
      <p1 x="1380" y="0"/>
      <p2 x="1380" y="20"/>
    </wire>
    <wire>
      <p1 x="1060" y="600"/>
      <p2 x="1060" y="620"/>
    </wire>
    <wire>
      <p1 x="1000" y="660"/>
      <p2 x="1000" y="680"/>
    </wire>
    <wire>
      <p1 x="620" y="-60"/>
      <p2 x="620" y="60"/>
    </wire>
    <wire>
      <p1 x="1260" y="540"/>
      <p2 x="1260" y="700"/>
    </wire>
    <wire>
      <p1 x="880" y="-20"/>
      <p2 x="880" y="0"/>
    </wire>
    <wire>
      <p1 x="240" y="-60"/>
      <p2 x="240" y="-20"/>
    </wire>
    <wire>
      <p1 x="240" y="0"/>
      <p2 x="240" y="20"/>
    </wire>
    <wire>
      <p1 x="1140" y="520"/>
      <p2 x="1140" y="540"/>
    </wire>
    <wire>
      <p1 x="1140" y="680"/>
      <p2 x="1140" y="700"/>
    </wire>
    <wire>
      <p1 x="500" y="80"/>
      <p2 x="500" y="100"/>
    </wire>
    <wire>
      <p1 x="1080" y="580"/>
      <p2 x="1080" y="600"/>
    </wire>
    <wire>
      <p1 x="760" y="-20"/>
      <p2 x="760" y="0"/>
    </wire>
    <wire>
      <p1 x="1400" y="80"/>
      <p2 x="1400" y="560"/>
    </wire>
    <wire>
      <p1 x="1020" y="640"/>
      <p2 x="1020" y="660"/>
    </wire>
    <wire>
      <p1 x="380" y="-60"/>
      <p2 x="380" y="-20"/>
    </wire>
    <wire>
      <p1 x="380" y="200"/>
      <p2 x="380" y="300"/>
    </wire>
    <wire>
      <p1 x="380" y="-20"/>
      <p2 x="380" y="200"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>