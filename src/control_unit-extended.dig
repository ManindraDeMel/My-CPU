<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Width</string>
      <int>6</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>INST</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="-300" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="780" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS1</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="780" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS2</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="780" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WS</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="780" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>STR</string>
        </entry>
      </elementAttributes>
      <pos x="780" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WE</string>
        </entry>
      </elementAttributes>
      <pos x="780" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>DMUX</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="780" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>splitterSpreading</string>
          <int>3</int>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>11-11,10-8,6-4,2-0,15-12</string>
        </entry>
      </elementAttributes>
      <pos x="-260" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>opcode</string>
        </entry>
      </elementAttributes>
      <pos x="-260" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Z</string>
        </entry>
      </elementAttributes>
      <pos x="-200" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Rd</string>
        </entry>
      </elementAttributes>
      <pos x="-240" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Ra</string>
        </entry>
      </elementAttributes>
      <pos x="-240" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Rb</string>
        </entry>
      </elementAttributes>
      <pos x="-240" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>4</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="-180" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>All Tests</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WE  ALUOP  RS1   RS2  WS  STR  LDR DMUX

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1  (i)     (ra)  (rb) (rd)  0   X    0  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  X       (ra)  x    (rd)  0   1    1  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  X       (ra)  (rd)  X    1   X    X  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          1  X       X      X   (rd)  0   X    2  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDR</string>
        </entry>
      </elementAttributes>
      <pos x="780" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    ALUOP 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (i)    #test add/sub/and/orr
end loop

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="780"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS1</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    RS1  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (ra)  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (ra)  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (ra)  #test str

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS2</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    RS2  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (rb) #test add/sub/and/orr
end loop
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (rd) #test str

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>STR</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    STR 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          0  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WE</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WE  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          1  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDR</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    LDR 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) X    #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        X    #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          X    #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>DMUX</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    DMUX

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test ldr
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          2  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WS</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WS 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (rd)  #test add/sub/and/orr
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (rd)   #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        X     #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          (rd)  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="760" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="760" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="760" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes/>
      <pos x="760" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes/>
      <pos x="760" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes/>
      <pos x="760" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="760" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="760" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1,1</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>3</string>
        </entry>
      </elementAttributes>
      <pos x="320" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="240" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="300" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="700" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="240" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>splitterSpreading</string>
          <int>8</int>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>1,1</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>2</string>
        </entry>
      </elementAttributes>
      <pos x="700" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="300" y="840"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="300" y="920"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="920"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="940"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="980"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="980"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="1000"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Checks whether the flag register should be written to or not
only on ALU OP codes (1 0 x x)</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>FLEN</string>
        </entry>
      </elementAttributes>
      <pos x="780" y="1180"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="760" y="1180"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="300" y="1160"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="1160"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>FLEN</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>INST FLEN
loop(i, 16)
(i) (0)
end loop
(0b1000 &lt;&lt; 12) (1)
(0b1001 &lt;&lt; 12) (1)
(0b1010 &lt;&lt; 12) (1)
(0b1011 &lt;&lt; 12) (1)
(0b1111 &lt;&lt; 12) (0)

</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>ALU Flag</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>ZREG</string>
        </entry>
      </elementAttributes>
      <pos x="-300" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="20" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>LED</elementName>
      <elementAttributes/>
      <pos x="780" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="480" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="480" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="460" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectHeight</string>
          <int>25</int>
        </entry>
        <entry>
          <string>Label</string>
          <string>Choose zero register to write if cond == false</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>9</int>
        </entry>
      </elementAttributes>
      <pos x="400" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>NAnd</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="100" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes/>
      <pos x="720" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>the SETH instruction</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>SETH</string>
        </entry>
      </elementAttributes>
      <pos x="780" y="1080"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="760" y="1080"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="500" y="1000"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Inputs</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="300" y="1040"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="1060"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="1100"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="1100"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes/>
      <pos x="220" y="1120"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectHeight</string>
          <int>6</int>
        </entry>
        <entry>
          <string>Label</string>
          <string>Testing for SETH</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>21</int>
        </entry>
      </elementAttributes>
      <pos x="-20" y="1020"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectHeight</string>
          <int>6</int>
        </entry>
        <entry>
          <string>RectInside</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>Testing for MOV</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>21</int>
        </entry>
      </elementAttributes>
      <pos x="-20" y="900"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>SETH</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>INST SETH
(0b0001 &lt;&lt; 12) (1)
(0b1000 &lt;&lt; 12) (0)
(0b1001 &lt;&lt; 12) (0)
(0b1010 &lt;&lt; 12) (0)
(0b1011 &lt;&lt; 12) (0)
(0b1111 &lt;&lt; 12) (0)

</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="980" y="940"/>
    </visualElement>
    <visualElement>
      <elementName>Rectangle</elementName>
      <elementAttributes>
        <entry>
          <string>RectHeight</string>
          <int>6</int>
        </entry>
        <entry>
          <string>RectInside</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>Testing for LDR</string>
        </entry>
        <entry>
          <string>RectWidth</string>
          <int>21</int>
        </entry>
      </elementAttributes>
      <pos x="-20" y="780"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="280" y="320"/>
      <p2 x="780" y="320"/>
    </wire>
    <wire>
      <p1 x="380" y="960"/>
      <p2 x="440" y="960"/>
    </wire>
    <wire>
      <p1 x="-80" y="520"/>
      <p2 x="300" y="520"/>
    </wire>
    <wire>
      <p1 x="-80" y="840"/>
      <p2 x="300" y="840"/>
    </wire>
    <wire>
      <p1 x="420" y="200"/>
      <p2 x="500" y="200"/>
    </wire>
    <wire>
      <p1 x="260" y="1160"/>
      <p2 x="300" y="1160"/>
    </wire>
    <wire>
      <p1 x="-80" y="1160"/>
      <p2 x="220" y="1160"/>
    </wire>
    <wire>
      <p1 x="460" y="140"/>
      <p2 x="480" y="140"/>
    </wire>
    <wire>
      <p1 x="420" y="460"/>
      <p2 x="480" y="460"/>
    </wire>
    <wire>
      <p1 x="260" y="1100"/>
      <p2 x="300" y="1100"/>
    </wire>
    <wire>
      <p1 x="-80" y="1100"/>
      <p2 x="220" y="1100"/>
    </wire>
    <wire>
      <p1 x="-160" y="400"/>
      <p2 x="-80" y="400"/>
    </wire>
    <wire>
      <p1 x="-60" y="720"/>
      <p2 x="320" y="720"/>
    </wire>
    <wire>
      <p1 x="-300" y="80"/>
      <p2 x="20" y="80"/>
    </wire>
    <wire>
      <p1 x="60" y="80"/>
      <p2 x="100" y="80"/>
    </wire>
    <wire>
      <p1 x="-40" y="1040"/>
      <p2 x="300" y="1040"/>
    </wire>
    <wire>
      <p1 x="440" y="1040"/>
      <p2 x="500" y="1040"/>
    </wire>
    <wire>
      <p1 x="200" y="340"/>
      <p2 x="240" y="340"/>
    </wire>
    <wire>
      <p1 x="-80" y="980"/>
      <p2 x="220" y="980"/>
    </wire>
    <wire>
      <p1 x="260" y="980"/>
      <p2 x="300" y="980"/>
    </wire>
    <wire>
      <p1 x="-40" y="920"/>
      <p2 x="220" y="920"/>
    </wire>
    <wire>
      <p1 x="260" y="920"/>
      <p2 x="300" y="920"/>
    </wire>
    <wire>
      <p1 x="740" y="540"/>
      <p2 x="780" y="540"/>
    </wire>
    <wire>
      <p1 x="680" y="540"/>
      <p2 x="700" y="540"/>
    </wire>
    <wire>
      <p1 x="720" y="860"/>
      <p2 x="780" y="860"/>
    </wire>
    <wire>
      <p1 x="380" y="860"/>
      <p2 x="700" y="860"/>
    </wire>
    <wire>
      <p1 x="380" y="1180"/>
      <p2 x="780" y="1180"/>
    </wire>
    <wire>
      <p1 x="560" y="480"/>
      <p2 x="680" y="480"/>
    </wire>
    <wire>
      <p1 x="-40" y="480"/>
      <p2 x="240" y="480"/>
    </wire>
    <wire>
      <p1 x="280" y="480"/>
      <p2 x="300" y="480"/>
    </wire>
    <wire>
      <p1 x="680" y="480"/>
      <p2 x="780" y="480"/>
    </wire>
    <wire>
      <p1 x="520" y="160"/>
      <p2 x="780" y="160"/>
    </wire>
    <wire>
      <p1 x="260" y="1120"/>
      <p2 x="300" y="1120"/>
    </wire>
    <wire>
      <p1 x="-100" y="1120"/>
      <p2 x="220" y="1120"/>
    </wire>
    <wire>
      <p1 x="-160" y="420"/>
      <p2 x="-100" y="420"/>
    </wire>
    <wire>
      <p1 x="-80" y="420"/>
      <p2 x="260" y="420"/>
    </wire>
    <wire>
      <p1 x="200" y="100"/>
      <p2 x="420" y="100"/>
    </wire>
    <wire>
      <p1 x="420" y="100"/>
      <p2 x="780" y="100"/>
    </wire>
    <wire>
      <p1 x="260" y="1060"/>
      <p2 x="300" y="1060"/>
    </wire>
    <wire>
      <p1 x="-60" y="1060"/>
      <p2 x="220" y="1060"/>
    </wire>
    <wire>
      <p1 x="-80" y="740"/>
      <p2 x="320" y="740"/>
    </wire>
    <wire>
      <p1 x="-240" y="360"/>
      <p2 x="-180" y="360"/>
    </wire>
    <wire>
      <p1 x="-160" y="360"/>
      <p2 x="-40" y="360"/>
    </wire>
    <wire>
      <p1 x="-100" y="1000"/>
      <p2 x="220" y="1000"/>
    </wire>
    <wire>
      <p1 x="260" y="1000"/>
      <p2 x="300" y="1000"/>
    </wire>
    <wire>
      <p1 x="440" y="1000"/>
      <p2 x="500" y="1000"/>
    </wire>
    <wire>
      <p1 x="720" y="620"/>
      <p2 x="780" y="620"/>
    </wire>
    <wire>
      <p1 x="-240" y="300"/>
      <p2 x="240" y="300"/>
    </wire>
    <wire>
      <p1 x="-60" y="940"/>
      <p2 x="220" y="940"/>
    </wire>
    <wire>
      <p1 x="260" y="940"/>
      <p2 x="300" y="940"/>
    </wire>
    <wire>
      <p1 x="-240" y="240"/>
      <p2 x="780" y="240"/>
    </wire>
    <wire>
      <p1 x="-40" y="880"/>
      <p2 x="300" y="880"/>
    </wire>
    <wire>
      <p1 x="-100" y="1200"/>
      <p2 x="300" y="1200"/>
    </wire>
    <wire>
      <p1 x="-240" y="180"/>
      <p2 x="200" y="180"/>
    </wire>
    <wire>
      <p1 x="200" y="180"/>
      <p2 x="480" y="180"/>
    </wire>
    <wire>
      <p1 x="380" y="500"/>
      <p2 x="480" y="500"/>
    </wire>
    <wire>
      <p1 x="-300" y="120"/>
      <p2 x="-260" y="120"/>
    </wire>
    <wire>
      <p1 x="-240" y="120"/>
      <p2 x="100" y="120"/>
    </wire>
    <wire>
      <p1 x="380" y="1080"/>
      <p2 x="440" y="1080"/>
    </wire>
    <wire>
      <p1 x="440" y="1080"/>
      <p2 x="780" y="1080"/>
    </wire>
    <wire>
      <p1 x="340" y="700"/>
      <p2 x="780" y="700"/>
    </wire>
    <wire>
      <p1 x="-40" y="700"/>
      <p2 x="320" y="700"/>
    </wire>
    <wire>
      <p1 x="-160" y="380"/>
      <p2 x="-60" y="380"/>
    </wire>
    <wire>
      <p1 x="580" y="1020"/>
      <p2 x="700" y="1020"/>
    </wire>
    <wire>
      <p1 x="-100" y="420"/>
      <p2 x="-100" y="1000"/>
    </wire>
    <wire>
      <p1 x="-100" y="1000"/>
      <p2 x="-100" y="1120"/>
    </wire>
    <wire>
      <p1 x="-100" y="1200"/>
      <p2 x="-100" y="1360"/>
    </wire>
    <wire>
      <p1 x="-100" y="1120"/>
      <p2 x="-100" y="1200"/>
    </wire>
    <wire>
      <p1 x="260" y="340"/>
      <p2 x="260" y="420"/>
    </wire>
    <wire>
      <p1 x="420" y="100"/>
      <p2 x="420" y="200"/>
    </wire>
    <wire>
      <p1 x="420" y="200"/>
      <p2 x="420" y="460"/>
    </wire>
    <wire>
      <p1 x="500" y="180"/>
      <p2 x="500" y="200"/>
    </wire>
    <wire>
      <p1 x="-40" y="360"/>
      <p2 x="-40" y="480"/>
    </wire>
    <wire>
      <p1 x="-40" y="700"/>
      <p2 x="-40" y="880"/>
    </wire>
    <wire>
      <p1 x="-40" y="920"/>
      <p2 x="-40" y="1040"/>
    </wire>
    <wire>
      <p1 x="-40" y="880"/>
      <p2 x="-40" y="920"/>
    </wire>
    <wire>
      <p1 x="-40" y="1040"/>
      <p2 x="-40" y="1360"/>
    </wire>
    <wire>
      <p1 x="-40" y="480"/>
      <p2 x="-40" y="700"/>
    </wire>
    <wire>
      <p1 x="200" y="180"/>
      <p2 x="200" y="340"/>
    </wire>
    <wire>
      <p1 x="680" y="480"/>
      <p2 x="680" y="540"/>
    </wire>
    <wire>
      <p1 x="440" y="960"/>
      <p2 x="440" y="1000"/>
    </wire>
    <wire>
      <p1 x="440" y="1040"/>
      <p2 x="440" y="1080"/>
    </wire>
    <wire>
      <p1 x="-60" y="380"/>
      <p2 x="-60" y="720"/>
    </wire>
    <wire>
      <p1 x="-60" y="1060"/>
      <p2 x="-60" y="1360"/>
    </wire>
    <wire>
      <p1 x="-60" y="720"/>
      <p2 x="-60" y="940"/>
    </wire>
    <wire>
      <p1 x="-60" y="940"/>
      <p2 x="-60" y="1060"/>
    </wire>
    <wire>
      <p1 x="-80" y="400"/>
      <p2 x="-80" y="420"/>
    </wire>
    <wire>
      <p1 x="-80" y="420"/>
      <p2 x="-80" y="520"/>
    </wire>
    <wire>
      <p1 x="-80" y="1160"/>
      <p2 x="-80" y="1360"/>
    </wire>
    <wire>
      <p1 x="-80" y="1100"/>
      <p2 x="-80" y="1160"/>
    </wire>
    <wire>
      <p1 x="-80" y="840"/>
      <p2 x="-80" y="980"/>
    </wire>
    <wire>
      <p1 x="-80" y="520"/>
      <p2 x="-80" y="740"/>
    </wire>
    <wire>
      <p1 x="-80" y="740"/>
      <p2 x="-80" y="840"/>
    </wire>
    <wire>
      <p1 x="-80" y="980"/>
      <p2 x="-80" y="1100"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>